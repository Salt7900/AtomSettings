{"version":1,"windowDimensions":{"x":4,"y":23,"width":1276,"height":777,"maximized":true},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge"],"buffers":[{"id":"c4b5d4d5c90eb9f43a554cfe8f53fb96","text":"","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":26,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[236,15],[236,15]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[236,15],[236,15]],"newRange":[[236,15],[236,16]],"oldText":"","newText":"/"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[236,16],[236,16]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[236,16],[236,16]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[236,16],[236,16]],"newRange":[[236,16],[236,17]],"oldText":"","newText":"b"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[236,17],[236,17]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[236,17],[236,17]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[236,17],[236,17]],"newRange":[[236,17],[236,18]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[236,18],[236,18]],"newRange":[[236,18],[236,19]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[236,19],[236,19]],"newRange":[[236,19],[236,20]],"oldText":"","newText":"g"}},{"type":"change","content":{"oldRange":[[236,20],[236,20]],"newRange":[[236,20],[236,21]],"oldText":"","newText":"s"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[236,21],[236,21]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[236,21],[236,21]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[236,21],[236,21]],"newRange":[[236,21],[236,22]],"oldText":"","newText":"/"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[236,22],[236,22]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[242,15],[242,19]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[242,15],[242,19]],"newRange":[[242,15],[242,26]],"oldText":"imgs","newText":"/blogs/imgs"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[242,26],[242,26]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[260,13],[260,17]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[260,13],[260,17]],"newRange":[[260,13],[260,24]],"oldText":"imgs","newText":"/blogs/imgs"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[260,24],[260,24]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[309,17],[309,21]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[309,17],[309,21]],"newRange":[[309,17],[309,28]],"oldText":"imgs","newText":"/blogs/imgs"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[309,28],[309,28]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[315,17],[315,21]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[315,17],[315,21]],"newRange":[[315,17],[315,28]],"oldText":"imgs","newText":"/blogs/imgs"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[315,28],[315,28]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[327,17],[327,21]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[327,17],[327,21]],"newRange":[[327,17],[327,28]],"oldText":"imgs","newText":"/blogs/imgs"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[327,28],[327,28]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[333,17],[333,21]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[333,17],[333,21]],"newRange":[[333,17],[333,28]],"oldText":"imgs","newText":"/blogs/imgs"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[333,28],[333,28]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,0],[503,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[503,0]],"newRange":[[0,0],[0,0]],"oldText":"Dbcposts.create([\n  {title: \"Chef's Kitchen\", week: \"Week One Cultural\", content_title: \"Why Classic Schools Don't Work\", content_subtitle:\"The Beginning of my Journey. Part Two.\", time: \"7.1.2015 10:15PM\",  content_body:\"  <p>\n      I feel like somebody has finally started to listen to students all across the country. The idea that school needs to be a singular effort- the idea that only you matter to your success- is no longer right. I'm not sure that it's ever been right. But it certainly isn't any more. Answers aren't just held in books, and grades shouldn't be dependent on what you can memorize. With Google, with Yahoo, with Bing, the answer to everything is only a search away. The world has changed- but the school system has not. We are not at a point where you should be expected to memorize everything - you should know how to find it.\n    </p>\n    <p>\n        Our school system does not accept learning. It accepts grades. This is why so many students feel the need to cheat. It doesn't matter what they have in their head, what matters is the grade at the top of the paper.\n    </p>\n    <p>\n        The idea in education that we can learn together- succeed together (and inevitably fail together) is revolutionary. The idea that we can work together instead of see others as a threat is amazing. Learning is an amazing thing. It allows people to move up in the world, to empathize with others, and to understand more. I love learning. But I didn't love school. I was never a good student. But I love reading. I spent, and continue to spend, way to much time on Wikipedia reading about anything that remotely interests me. And it's amazing the power that knowledge has. But it's not a power that schools teach you. But- DBC does. It's among the leaders of the pack that is revolutionizing the way we learn. It's amazing to be able to learn, not to memorize with the intention of getting an A.\n    </p>\n\n    <p>\n      This is only the beginning for me. And I'm already immensely proud to be a student of DBC. Purple Martins for life!\n    </p>\"},\n    {title: \"Git\", week: \"Week One Technical\", content_title: \"The Beginning of Programming\", content_subtitle:\"The start of my adventure\", time: \"8.1.2015, 2:11PM\",  content_body:\"<p>\n      The directions I have to start only have things that are actually related to code- but I thought I would start at the top with a little of other things. About how this week has been a little nuts, trying to figure out what's going on, and how to do this or do that. This week has been the beginning on what will hopefully be a lifetime of programming- enjoying code, and everything that it can do. And this blog is the start of my documenting those adventures, which if you ask me, is pretty cool.\n    </p>\n    <h3>Technical things....(what I'm supposed to talk about)</h3>\n    <h4>What is git? What is version control</h4>\n    <p>\n      So, a week ago I would have had no idea. I may have looked up github on Wikipedia once, but it probably didn't make much sense. And while I am very, very far from any mastery of either, I do have a little bit more insight as to what they are and what they do. Enough that I can comfortably work with git on a working level. It's kinda like the whole 'Every square is a rectangle but not every rectangle is a square' thing. All Git is version control. But not all version control is git. All version control (VCS) does is keep track of changes. Which makes sense given the name. In the beginning of computer science days, you'd write a program, (for sake of explanation, we'll call it game) and it would become game_v1. Now lets say you find a bug in the last 40 lines of the code. You change just the bug in the last 40 lines, and copy the rest of the code, and the whole thing now becomes game_v2. But wait! You didn't change the rest of it! Wouldn't it be great if there was a way to just change what you want, and not touch the rest? That's where VCS comes in. It will track only what you change- and you don't have to keep track of what changed and when and why- with a little help from you, it will do it all. Which helps, yes, when you're coding by yourself, but is way more helpful when you're coding in a team. Say we're back working on our game, but this time our friend Paul is helping. There's two bugs- one is in the last 40 lines, and one is in the first 40. We take the one in the end, and he takes the one at the top. Of course he finished first, and saves all of his changes as v2. Now we finish ours, and re-copy all of the file, with our changes into v2. But we were working on an old file, _v1, and when we copied, copied the old (v1) version of Paul’s code. And his is now gone, being the original. What VCS (of which git is a type) lets us do is track the lines that we made changes to. When he finished and merged his code into the project, it saw he only changed line 23, and only updated line 23. When we merge ours in, and it sees we only changed line 475, it only changes line 475 and leaves the rest (including 23, where Paul made his change) alone. All of us can work on different parts and not be afraid of getting rid of somebody else's changes.\n\n      Thats what git does. It tracks what we've changed. When I make a change to a file, and then run the command git status in terminal, it will tell me what files I've changed. And then it's just a matter of committing those changes to the file. It's pretty nifty.\n    </p>\n    <p>\n        So, now that we sorta understand what git is, what's GitHub? And why should I use it...\n\n        Yes, you could just keep the files you're working on locally. And if you're working by yourself, that's fine (just back them up somewhere. Murphy's Law applies.) But going back to our imaginary game with Paul. Wouldn't it be great if there was a place to upload our changes so that when we merge, we always have the most up to date file? Enter GitHub. All it does is host all of our files- when I make a change, I push that change to GitHub. That way, when Paul wants to make a change, he can pull the most recent version and make changes to that. You'll never be out of date in regards to your other team members.\n    </p>\n\n    <p>\n      Like I said, this is only the start. In the next 18 weeks, and probably the next 18 years, I'm excited to see what I can add to this.\n    </p>\"},\n    {title: \"CSS\", week: \"Week Two Technical\", content_title: \"HTML/CSS\", content_subtitle:\"The building blocks of the Internet\", time: \"8.9.2015, 8:49PM\",  content_body:\"<h4>.Class #id</h4>\n    <p>\n      How can two words- two ideas- that esentially do the same thing be so differnt? How can two words be the difference between code that follows proper usage, and that which doens't? Are those two words a thing?\n    </p>\n    <p>\n      Yes. Yes they are. And those two words are Class and ID. Both do the same thing- allow for more specific control over formatting when using CSS. They really even do it in the same way. But when you would use them, that is totally differnt, but equally as simple. IDs are used when you only have one thing in the HTML file that you want to change. Classes are used when you have multiple. It's deceptivily simple. But, here's some examples-\n    </p>\n\n    <p>\n      Say I have a SINGLE H1 tag that I want to change to be green. The HTML is ensentially the same if I had a standard H1 tag- <br> &lth1 id='title'&gtI'l be green!&lt/h1&gt </br> <br>Now, when you're on the CSS page, to change only that H1, instead of all- </br> <br> #title{color:green;}</br>\n    </p>\n\n    <p>\n      Now lets say I have two portions of a page. Both contain H2 elememts. On the top part, you want them to be red! The code for each will look the same: <br>&lth1 id='top_of_page_heading'&gtI'l be red!&lt/h1&gt </br>\n      <br>Now, when you're on the CSS page, to change only those H2, instead of all- </br> <br> .title{color:red;}</br>\n    </p>\n\n    <p>\n      The most important thing when it comes to these- and oft forgotten, is how you denote them in the CSS sheet. For classes, simply affix a .\n      <br>For ID's, affix a #<br>\n    </p>\n\n    <p>\n      It's been a crazy week to get to this point from really no knowledge. Let's hope the coming are just as successful.\n    </p>\"},\n    {title: \"Learning Styles\", week: \"Week Three Cultural\", content_title: \"Learning Styles\", content_subtitle:\"How Everyone Differs\", time: \"7.16.2015, 12:20PM\",  content_body:\"<p>\n      One of the things that DBC really pushes is the idea of EQ over IQ- that knowing how you learn and how to work with other people is more important then just being smart. In a effort to understand ourselves we all take <a href = 'http://www.thelearningweb.net/personalthink.html'> This Quiz. </a> And I ended up with some ansers that I both agree and disagree with. I'm not sure how accurate a test of 15 questions can be at gauging you as a person, but, according to said 15 questions, I'm pretty much dead set on Abstract Sequential and Concrete Random, which mean the following-\n    </p>\n\n    <h4>Abstract Sequential</h4>\n\n    <ul>\n       <li> This learner likes:\n          <ul>\n          <li>his/her point to be heard</li>\n          <li>analyzing situations before making a decision or acting</li>\n          <li>applying logic in solving or finding solutions to problems</li>\n        </ul>\n       </li>\n       <li> They learn best when:\n        <ul>\n          <li>they have access to experts or references</li>\n          <li>placed in stimulating environments</li>\n          <li>able to work alone</li>\n         </ul>\n        </li>\n        <li>What's hard for them?\n          <ul>\n          <li> Being forced to work with those of differing views</li>\n          <li>Too little time to deal with a subject thoroughly</li>\n          <li>Repeating the same tasks over and over</li>\n          <li>Lots of specific rules and regulations</li>\n          <li>'sentimental' thinking</li>\n          <li> Expressing their emotions</li>\n          <li>Being diplomatic when convincing others</li>\n          <li>Not monopolizing a conversation</li>\n          </ul>\n         </li>\n    </ul>\n\n    <h4>Concrete Random</h4>\n        <ul>\n            <li>This learner likes:\n              <ul>\n                <li>experimenting to find answers</li>\n                <li>take risks</li>\n                <li>use their intuition</li>\n                <li>solving problems independently</li>\n              </ul>\n            </li>\n            <li>They learn best when:\n              <ul>\n                <li>they are able to use trial-and-error approaches</li>\n                <li>able to compete with others</li>\n                <li>given the opportunity to work through the problems by themselves.</li>\n              </ul>\n            </li>\n            <li>What's hard for them?\n              <ul>\n                <li>Restrictions and limitations</li>\n                <li>Formal reports</li>\n                <li>Routines</li>\n                <li>Re-doing anything once it is done</li>\n                <li>Keeping detailed records</li>\n                <li>Showing how they got an answer</li>\n                <li>Choosing only one answer</li>\n                <li>Having no options</li>\n              </ul>\n            </li>\n          </ul>\n\n    <p>\n        I'm sure that parts of this are accurate- I know I don't like formal reports, and having to abide by a long list of rules. I like to think that I don't monopolize when I talk, but I think some of my friends might disagree with that...\n    </p>\n\n    <p>\n      I think that some of the things mentioned are keys to success at DBC, however. In a typical school setting, everything is rigid. You have no options. Just by defecting to DBC is changing that, which I think benefits me. The hardest thing that DBC has had in stock for me has been the requirement to look past the material. To be able to do blog posts about how I feel, or to be able to leave feedback for people. And while I do have trouble describing how I feel about something, I do think it's for the better that we have to, and I'm sure it's something that gets easier with the more you do it. It all goes hand in hand with mindsets- that of fixed and of growth. Fixed says that you have an intelligence level. And that's what you're stuck with. Growth means you know what you have now, but also know that you can learn more and be in a better spot. It's a fundamental part of what we're doing with DBC. If we took every piece of feedback we get and got discouraged because it wasn't all positive, we'd be nowhere, and would certainly not finish the program.\n    </p>\n\n    <p> To adapt is to succeed- </p>\"},\n    {title: \"Ruby Basics\", week: \"Week Three Technical\", content_title: \"Arrays. Hashes. The Simple Difference.\", time: \"8.16.2015, 12:18AM\",  content_body:\"<p>\n      It's amazing how far things can come in the span of three weeks. Three weeks ago, I could have told you very little about HTML, Git, CSS, or Ruby.And now I sit here and type this- a continuation of the weekly posts- about just that. Sometimes you just have to stop and look how far you've come in such an amount of time.\n    </p>\n\n    <h4>The Array.</h4>\n    <p>\n      At its most basic level, an array is simple. It's a variable that can have more then one value.\n    </p>\n    <p>\n      But life is rarely so simple. So to explain as to why you would use an array, lets consider an explanation. Let's pretend that I'm a high school teacher (yea, I know, it won't really ever happen but humor me for the moment). For some reason, I've decided that I want to write a program that takes all the birthdates of my students and stores them into variables. Now, each student could certainly get their own variable. It wouldn't be hard to say <br> student_one_age = 7 </br>\n      And that would certainly work. And then I just create a new one for each of the students. Say I have 26 students, so I end up with 26 variables. But now I pose a question: if I want to, say, find the average age of the class, how do I do that in short amounts of code? And how do I keep track of 26 variables for something so simple as age. And now the array starts to make sense. I can store the value for all 26 students in one spot. It's not all that complex, either- <br> student_age = [age_1, age_2, age_3] </br> And as simple as that, I can have all of the ages put in one spot, with only one variable name. When I want to find just one, I use the index of the spot.\n    </p>\n\n    <h4>The Hash.</h4>\n\n    <p>\n      That said, it probably isn't the best choice for what I want to do. Yes, it's great that it's all in one spot. However, I have to remember the index number of all the students to get to their age. Wouldn't it be great if I could use something other then an index number to find the age of a student. Say, their name? And thus is the genius that is the hash. The syntax is fairly similar: <br> student_age = { 'Maddie' => 17, 'Jack' => 18 } </br> Now all I have to do to get to the age (the value) is know somebodies name (the key). All I need to do is specify <br> student_age['Maddie'], and the return will be 17.\n    </p>\n\n    <p>But! It can go even further! Maybe I want to make the value in a hash an array! And why? Sticking with the teacher example, I want a program to store the grade results of my students, and I want to be able to be able to get to them with their name. There's been two tests, so I can't just make a hash. But I can make a hash of arrays. <br> student_grades = {'Maddie' = [96, 104], 'Jack' = [56,76]} </br> And all the grades come back. To get to the grades of Jack, I just need to specify the name, and the array with the grades comes back.\n    </p>\"},\n    {title: \"Online Privacy\", week: \"Week Four Cultural\", content_title: \"Online Privacy\", content_subtitle: \"The Big Problem that Nobody Wants to Talk About\", time: \"7.23.15 5:20PM\",  content_body:\"<p>\n      There's eight million places I could go with a blog post that start with the title of \\\"Online Privacy\\\". Heck, a guy looking over your shoulder at the local Starbucks could qualify.\n    </p>\n\n    <p>\n       However, there is one problem that I see as more pressing then any of the others. One that I hope as I get further and further into web development, I find to be largly overstated. The government. Our government. Your governemnt. It doesn't matter. All of them together.\n    </p>\n\n    <p>\n      An ex-NSA contractor released what they do. What they collect, and how they use it to make a \\\"safer\\\" world. His name was Edward Snowden. I am, in a way, surprised when it comes up and people don't know who is, seeing the huge amount of information he released to the public. We live in an age where everything we do is online. A lot of it is by choice. You voluntarily post where you are, who you're with, why you're there, when you leave, what you spent your day doing. You post this on Facebook, on Twitter. What a lot of people don't realize is that it's all saved, and a lot of it is handed to the government. In parts of Europe, web companies are required to disclose everything they have on you, if you request it. It's not unusual to see these reports over 1500 pages long. Where does it stop? Will we ever, as an online society, be able to gain back the privacy that we had before everything was connected? I hope so, but am unconvinced. Google makes money by selling your information. So does Facebook. And Microsoft. And just about anyone that you think is trustworthy.\n    </p>\n\n    <p>The following are programs that governments employ to mine the information that we have:</p>\n    <ul>\n      <li>PRISM : United States with Australia, the UK, and the Netherlands</li>\n      <li>XKeyscore : United States with Germany and Sweden</li>\n      <li>Tempora : UK with the United States </li>\n      <li>MUSCULAR : UK with the United States </li>\n      <li>Project 6 : Germany with the United States</li>\n      <li>Stateroom : Australia, Canada, the UK, and the United States</li>\n      <li>Lustre : United States and France</li>\n    </ul>\n\n    <p>\n      Where does the line between personal privacy and public safety lie? At the moment, I don't think we know. But I hope we find out soon.\n    </p>\n\n    <p>\n      Because it's humorous, but also fairly full of information, I present the following for viewing pleasure. Take it as you will.\n    </p>\n\n    <iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/XEVlyP4_11M\\\" frameborder=\\\"0\\\" allowfullscreen></iframe>\"},\n    {title: \"Enumerables\", week: \"Week Four Technical\", content_title: \"Enumerables. Cycles.\", time: \"8.23.2015, 4:46PM\",  content_body:\"<p>\n      We've finally moved to what we all came to do - ruby. This week we've been working on methods and how they interact with objects and the like.\n    </p>\n\n    <h4>Enumerable#cycle</h4>\n    <p>\n      Enumerables are ways of calling blocks and having every item in a hash or an array iterated over.\n    </p>\n    <p>\n      Cycle is just one of the many ways that an enumerable can be used. At it's most basic, it allows you to run over every element of said array and do what's in the block X amount of times. For instance, the following <br>array= [\\\"a\\\",\\\"b\\\",\\\"c\\\"]</br><br>array.cycle(2) {|x| puts x} ==> a, b, c, a, b, c </br>\n    </p>\n\n    <p>\n      All it did was take the array and go over it twice, doing the contents of the block to each individual element in the array. As we can see, and as we expected, the output is simply the contents of the array twice. If it was changed and we made it <br>array.cycle(4)</br> We would get the letters printed out four times.\n    </p>\n\n    <p>\n      Now, if you pass it an amount of negative or zero, as such <br> array.cycle(-3)</br> it will do nothing. Also along those lines, and something that is potentially dangerous, if you leave the number of cycles times empty: <br> array.cycle </br> it will continue to run the block forever.\n    </p>\"},\n    {title: \"Feedback\", week: \"Week Five Cultural\", content_title: \"Pairing and Feedback\", time: \"7.30.15 2:54PM\",  content_body:\"<p>\n      Feedback is kinda a wierd thing. The idea that you can go and tell people- in this case your peers- what they're doing right, and what they're doing wrong. It's weird but it's cool.\n    </p>\n\n    <p>\n      Pairing is a huge thing at DBC. It's the way that we learn, the way we check in, and the way we get to know people in Phase 0. And feedback is a huge thing in pairing. Pairing is effective because it shows us what is effective. It tells us what we do right, and what we do wrong. It tells us what we can work on, when to speak up, and when to shut up. It's nice, though, to know that you're not the only one who spends just as much time on RubyDocs as they do in Sublime. There's plenty of times where you think that you're lagging behind or having trouble with that week, and then all the pairing partners agree. Not to say that it is always all positive. There are times where you come away thinking that you're behind or you don't understand.But, in a sense, the point of pairing is not to tell you that making mistakes is bad, but that learning nothing from them is bad.\n    </p>\n\n    <p>\n      Reading the feedback that people have left is much the same experience. Sometimes you look and say that you nailed it, and sometimes you look and ask yourself how you could have been so foolish. Sometimes there's nothing to take away- just that you were great. Which, while being a great self-esteem boost, doesn't help me very much. I want to know what I did wrong. I want to know what I screwed up, so that next time I don't. And it doesn't need to be mean to be effective. But I still want to know what to work on. For instance, when pairing, I like to just drift off into RubyDocs, leaving my pair not sure what I'm doing, which becomes a huge waste of time for everyone. It's a simple fix- just tell them that I'm diving in to find the answer. But it's not something that I would have realized I was doing if nobody had said it.\n    </p>\n\n    <p>\n      Writing feedback, however, is hard. How do you condense all of your interaction over an hour into 4 sentences? How do you remember everything that someone did or didn't do? How can you convert that into words? Writing feedback is just as much a reelection of you as it is of them. How do you nicely put what they need help on? It's all hard, but in the end telling what actually happened is the easiest thing to do. Make sure you comment on what they did well, and what you gained out of the time- but also what they could have done could have done better to help you learn. Pairing isn't about you. It's about helping each other, and will only work as long as everyone agrees with that.\n    </p>\n\n    <p>\n      The most important thing with feedback is to not read it and be offended. Nobody is perfect, and the sooner that you know that you're not either, the sooner you can really take advantage of the feedback that people leave\n    </p>\n\n    <p>\n      There's only one thing that should always be the same with the DBC feedback. We get a little check box that asks if we felt we were respected. The answer to that should always be yes, because there's no reason to be disrespectful to you're fellow students. That's the only requirement of the feedback, and it's only a feedback requirement because it's a life requirement.</p>\"},\n\n    {title: \"Classes\", week: \"Week Five Technical\", content_title: \"The Class\", time: \"8.29.2015, 3:33PM\",  content_body:\"<p>\n    So, throughout this procress, there's certain moments where you look back at the week and see what you've learned, and can't help but think that you've made a big stride that week. That all of a sudden, what you're working on seems useful. That one day, you'll be saying \\\"Yea, that was super important.\\\" In a sense, this week was one.\n  </p>\n\n  <p>\n    We've been working on classes this week. And it comes out that they're super, super useful. But was is a class, and why is the best? Well, first, it's an object. As is everything in Ruby. But it's an object that can have different variables and methods- it keeps code shorter. For case of explanation, I'm going to use the example of a music library that you want to clean up and have the data for. Lets say that you want to know the title of the song, who wrote it, how long it is, and what album it's off of. Now, if we wanted to keep track of two songs, we'd need 8 variables. (2 songs x 4 things to store). Lets say we have a meager 100 songs. Thats 400 variables to name and to keep track of. The following block of code would be how one would be defined, and then it would output the song name.\n  </p>\n\n  <img src = \\\"/blogs/imgs/variables.png\\\" style=\\\"width: 25%; height: 25%\\\">\n\n  <p>\n    Now this isn't terrible, but imagine having to do that for 200 songs. 1000 songs? Forget it. Wouldn't there be a great way to create a blank template of \\\"song\\\" and then be able to assign the attributes different values? That's where the class comes about. In the following block of code, we define a new class, and then make a new instance of that class for the song One.\n  </p>\n\n  <img src = \\\"/blogs/imgs/class.png\\\" style=\\\"width: 25%; height: 25%\\\">\n\n  <p>\n    Now, for what's actually going on. We have the start of a class called \\\"Song\\\". Inside we have the method initialize, which is a special method in the sense that it will get run every time you make a new song. It accepts the arguments that we send it when we say one = Song.new. The reason that we have to equal them to \\\"them self\\\"(@artist = artist) is because we want to be able to get to those variables in a latter method. If we just said artist, we wouldn't be able to get to them outside of the initialize method. Let's say that we want to create another method inside of the class that prints \\\"___ is the best!\\\", with the ___ being the band that we give it. If we just left the variables inside the initialize method, we wouldn't be able to get to them inside of the \\\"print\\\" method.\n  </p>\n\n  <p>\n    Something else to look at, is the attr_accessor. It just allows us to read and write to and from our objects. Because we have that, we can do things like this-\n  </p>\n\n  <p>\n    p one.artist\n  </p>\n\n  <p>\n    And the output will be \\\"U2\\\" By this seems like a lot of work to just store one song. That's because it is. But what if we have 5?\n  </p>\n\n  <img src=\\\"/blogs/imgs/titles.png\\\" style=\\\"width: 25%; height: 25%\\\">\n\n  <p>\n    That alone would be 20 variables to try to keep track of. And calling data isn't difficult. Want to print the album information of one of the songs?-\n\n    <br>puts sun.album ==> \\\"Pop\\\"</br>\n  </p>\n\n  <p>\n    String interpolation works with classes as well. For instance, if we give type-\n\n    <br>puts \\\"\\#{sun.album} really has a few standout tracks.\\\"</br>\n\n   <br> What we'll get when we run the program is</br>\n\n   <br> Pop really has a few standout tracks.</br>\n  </p>\"},\n  {title: \"Stereotypes\", week: \"Week Six Cultural\", content_title: \"Stereotype Threat\", time: \"9.6.2015 12:27AM\",  content_body:\"<p>\n    Last week I started off by saying feedback is a wierd thing. This week I say the same thing about stereotype threat. The idea that because I am a member of a group that is bogged down by a steroytype (such as African Americans being less inteligent), I'm going to perform more like that group. In a sense, it goes right along with the impostor sydrome - the idea that you don't deserve to be where you are because you can not see your achivements.\n  </p>\n\n  <p>\n    A lot of research to stereotype threat comes from college testing. It's easy to quantify, and thus easy to evaluate. People have found that those groups that are seen as under-achieving (such as the African American population) are less likely to be successful at the SAT, not because they are any less intelligent, but because people think that they are less intelligent.\n  </p>\n\n  <p>\n    Impostor Syndrome is the idea that you don't deserve to be where you are, and that you've gotten lucky. That you stumbled into something at just the right time and that you will soon be \\\"outed\\\" and kicked out of whatever group you've gotten to or whatever achievements you've gotten will be stripped.\n  </p>\n\n  <p>\n    The drawback to ST are fairly easy to see. And it fosters itself. It's like a wheel.\n  </p>\n\n  <p>\n    I think, however, that the larger problem might not be ST itself, but is in the way that we see and test ourselves. A big part of the threat is in SAT and ACT testing. They're major points and scores in anyone's life. But should we put as much emphasis on them as we do? Are they really the best way to measure ourselves? I argue they aren't. They measure nothing more then the ability to memorize information. The problem is not the ST threat exists, but is the reasons that it exists. Yes, you can make the argument that to rid ourselves of ST, we need to remove stereotypes. Which is not untrue, but we should all strive to remove and not pay attention to them outside of this, anyway. But on a bigger scale then just looking at ST, I think we need to look at how we quantify (or qualify)everyone as a person. The SAT can only measure one thing- and people are not made up of only one thing.\n  </p>\n\n  <p>\n    Our world is moving ahead at a rapid pace. A rapid pace on a lot of fronts. Biotech, tech, medicine, how long we live, how much food we can make, the amount of people that can get to water. But, especially in the civilized world, we measure ourselves by numbers. What did we get on the ACT? SAT? Last week's physics test? My GPA? And it's been that way forever. Maybe we need to look at more then that. Maybe we need lest testing, and more talking. I'm convinced that a 15 minute conversation with someone could provide more information about a person then the ACT ever could. Yes, stereotype threat is a problem. But it's just one problem that's being perpetuated by the way we measure ourselves. You're not your GPA, and your GPA is not you.\"},\n  {title: \"OOP Concepts\", week: \"Week Six Technical\", content_title: \"Blocs, Procs, and Lambdas\", time: \"9.5.2015, 11:32PM\",  content_body:\"<p>\n      What exactly are any of them? At this point in the adventure that is DBC, I could tell you what a block is. I could tell you how to use a block- we do all the time, but not neccisarly do we know that. They just kinda make sense. But looking at Procs and Lambdas, then I'm not toally sure. I don't think we've used them, but they sound awfully framiliar. But we've not used them... So I had to look it up.\n    </p>\n\n    <h3>The Block</h3>\n\n    <p>\n      So what is a block, and why do I say that we've used them.. because we have. Just without knowing it. Simply put, it's everything that could be found between a do and an end. For example-\n    </p>\n\n    <img src = \\\"/blogs/imgs/block.png\\\" style=\\\"width: 25%; height: 25%\\\">\n\n    <p>\n      The \\\"puts x\\\" is the block. In another example -\n    </p>\n\n    <img src = \\\"/blogs/imgs/long_block.png\\\" style=\\\"width: 25%; height: 25%\\\">\n\n    <p>\n      Everything between the do and the end is still the block. It doesn't matter how long or how short it is. It's still a block.\n    </p>\n\n    <h3>The Proc</h3>\n\n    <p>\n      Now that's kinda a funny word, and one that you don't see every day. What is a proc? It sounds like a block.. and in a way it is. It's really just a block that is reusable, and that is an object. For instance-\n    </p>\n\n    <img src = \\\"/blogs/imgs/proc.png\\\" style=\\\"width: 25%; height: 25%\\\">\n\n    <p>\n      This does the same thing as the first block that was presented. And it outputs the same thing. So the question then becomes, why would one ever use a proc when blocks make sense? Because they can be used more then once!-\n    </p>\n\n    <img src = \\\"/blogs/imgs/long_proc.png\\\" style=\\\"width: 25%; height: 25%\\\">\n\n    <p>\n      If we had wanted to do the same thing to both array and array_2 using only blocs, we would have to retype the whole thing. Now this isn't a huge deal when you're dealing with a simple statement, much like we are. However, when they get longer, it can be nice to only have to type it all out, and thus store it, once.\n    </p>\n\n    <h3>The Lambda</h3>\n\n    <p>\n      A lambda is an extension of the proc. It IS a proc. But it also differs from a \\\"regular\\\" proc in a few ways. For starters, it cares about how many arguments it gets passed.\n      If you had a proc that accepts 1 argument, and you send it 2, it runs with the first and kinda forgets that the second is there. A lambda would raise an error. Say you had the same proc, and this time you pass it no arguments. It will return nil. If you run a lambda that way, you'll raise an error.\n    </p>\n\n    <p>\n      The other thing that makes them differ is a little harder to understand, and that is how each deal with the word return. A proc, when return is used, will jump to the next statement outside of the METHOD that calls the proc. A lambda will jump to the next statement outside of the lambda code. For instance -\n    </p>\n\n    <img src = \\\"imgs/lambda.png\\\" style=\\\"width: 25%; height: 25%\\\">\n\n    <p>\n      In the proc, you'll never see the \\\"Hello World!\\\"- it jumps out of the method. You will, however, see it with the lambda, as it only jumps outside the lambda itself.\n    </p>\"},\n    {title: \"Values\", week: \"Week Seven Cultural\", content_title: \"Values\", time: \"9.13.2015 8:35PM\",  content_body:\"<p>\n      Last week, we talked about stereotype threat on a very broad level - how it exists and why, and what we can do to combat it. This week we look a little more personally - why we might feel it and what we can do about it.\n    </p>\n\n    <p>\n      Something that I look at in myself - and the reason that I see a lot of my success - is the idea of personal achievement. We define ourselves by what we do. What we succeed and, and inevitably what we don't.\n    </p>\n\n    <p>\n      People ask me a lot of things, and a lot of advice goes out on the basis of my past depressive episodes.\n    </p>\n\n    <p>\n      I don't talk about it as a reason to make people feel sorry for me. I don't use it because I want the easy way in life. I think about it because I got through it - because I continue to get through it. It's not something that just goes away - but it is something that I can beat. And something that, so far, I have beaten every day. And to me, that's an achievement.\n    </p>\n\n    <p>\n      I don't know if that's something that you can be stereotype-ed because of it.. A lot of the thoughts that others have about depression are so far from the truth that I could never think about doing them. I'm not just going to crack and shoot up a mall. I think that we all need to have a conversation about mental health, but that's a blog post for another day.\n    </p>\n\n    <p>\n      I'm proud that I'm able to get up every morning and go about my life. I'm happy that it's not a disabling problem. And a lot of the time, that's all I need. Does it get hard to get up and be energetic sometimes? Yes. But I know that I can get through it.\n    </p>\n\n    <p>\n      It's amazing the things that can push us off the brink. I love music. Mostly U2. It can be inspiring. We all have the little things that make us feel more like us. I also love driving. Sometimes I work myself so far down into a hole, that I can't see a way out, because I can't think straight. If I can take 30 minutes to drive - and not think about the problem - think about where I am and if I want to turn left or right, or take an hour and close my eyes and fall into Achtung Baby, I know that I can work myself out of that hole. And that's an achievement if I've every heard of one.</p>\"},\n    {title: \"JavaScript\", week: \"Week Seven Technical\", content_title: \"JavaScript\", time: \"9.13.2015, 4:48PM\",  content_body:\"<p>\n      You'd think that Object-Oriented languages would have more things in common.\n    </p>\n\n    <p>\n      Then again, when you think about it, you'd think that maybe they should be more different.\n    </p>\n\n    <p>\n      Javascript is different then Ruby. But it isn't that different. A lot of things stay the same- the biggest change is to remember a ; at the end of a line. But for the most part, things are the same, they just go by different names.\n    </p>\n\n    <h3>The Hash</h3>\n\n    <p>\n      A hash is a Ruby thing. It's a Key-Value pair. Which is a fancy way of saying you want one thing to lead to another - like a dictionary. I have a bag of fruit, and want to document how many of each I have. I can create a hash that is called fruit_count. In it, I say \\\"apple\\\" ==> 3 and \\\"pear\\\" ==> 2. Now, when I want to see how many I have, I can just tell Ruby to look up the hash, and to access the apple part. It will return 3.\n    </p>\n\n    <h3>The Object</h3>\n\n    <p>\n      Let's first say that everything in ruby is an object. Even the hash, it's just a special kind of object.\n    </p>\n\n    <p>\n      JavaScript calls things objects, when in reality many other things are also objects.\n    </p>\n\n    <p>\n      But as to what it calls an object- it behaves much the same way that a Ruby hash would. Again, saying I have a bag of fruit. When I declare the variable fruit, I'll give it properties, and then those properties will have values. Sounds similar... So, I can again point apple to 3 and pear to 1.\n    </p>\n\n    <h3>Getting back to the value</h3>\n\n    <p>\n      Now, probably the biggest difference is how you get back to the values.\n    </p>\n\n    <p>\n      In Ruby, if you want to get to the apple count, you'd do this- <br>fruit_count[:apple]</br>\n    </p>\n\n    <p>\n      JavaScript is along those lines. You'd say <br>fruit_count.apple</br>\n    </p>\n\n    <p>\n      In both cases, the output will be 3.\n    </p>\"},\n  {title: \"TDD\", week: \"Week Eight Technical\", content_title: \"TDD\", content_subtitle:\"Test Driven Development\", time: \"9.20.2015, 8:05PM\",  content_body:\"<p>\n    We want you to fail.\n  </p>\n\n  <p>\n    How often do you hear those words from someone you like? Probably about never.\n  </p>\n\n  <p>\n    But that's the idea of Test-Driven Development. To look for things that fail, and then to go back and fix them, so that they no longer fail. Often it involves writing the tests that you want to fail. But it can be as simple as calling an object that doesn't really exist. Trying to reference a variable that hasn't been declared. Invoking a method that doesn't yet exist.\n  </p>\n\n  <p>\n    Let's say that I'm trying to build a calculator. A simple enough program. If I were to just start, I'd dig right in, and probably end up with something that looks a little like this -\n  </p>\n\n  <img src = \\\"imgs/add_me.png\\\" style=\\\"width: 25%; height: 25%\\\">\n\n  <p>\n    And when I want to use said method, I'd just call add and pass it the arguments that it wants.\n  </p>\n\n  <p>\n    But if I wanted to go about making my calculator with TDD, I'd start with a test first. I'd start with this.\n  </p>\n\n  <img src = \\\"imgs/call_me.png\\\" style=\\\"width: 25%; height: 25%\\\">\n\n  <p>\n    Which, will of course raise a multitude of errors for various reasons. The first that you will encounter will be the \\\"Undefinded Method\\\" error. Okay, so lets fix it and make a method. The code now looks like this -\n  </p>\n\n  <img src = \\\"imgs/blank_add.png\\\" style=\\\"width: 25%; height: 25%\\\">\n\n  <p>\n    Which will, when run, of course return with an error. This time we get \\\"Wrong Number of Arguments (2 for 0)\\\" Which makes sense. We've defined the method, but we haven't told it to accept anything. So we can fix that -\n  </p>\n\n  <img src = \\\"imgs/arguments.png\\\" style=\\\"width: 25%; height: 25%\\\">\n\n  <p>\n    Which, just returns \\\"false\\\". So now at least Ruby doens't have a problem with what's going on, but the logic isn't coming through. It should output \\\"true\\\" if the test works the right way. So, we once again amend the code -\n  </p>\n\n  <img src = \\\"imgs/i_work.png\\\" style=\\\"width: 25%; height: 25%\\\">\n\n  <p>\n    And sure enough, it now returns true..\n  </p>\n\n  <p>\n    Rinse and repeat.\n  </p>\"},\n  {title: \"Questions\", week: \"Week Nine Cultural\", content_title: \"Questions\", time: \"9.26.15 8:35PM\",  content_body:\"<p>\n      Questions are something that we ask all the time, yet not something that we always get right. It's not always a case of practice makes perfect, but if you know what you want to know, you can know how to ask about it.\n    </p>\n\n    <p>\n      (A lot of what is talked about in this post is mostly relevant to tech people, but their are bits that can be used by anyone.)\n    </p>\n\n    <p>\n      The first part, and this is something that I commonly find myself guilty of, is to make sure that you're asking a question. \\\"I did this and then this happened\\\" is not a question. It's a statement.\n    </p>\n\n    <p>\n      This hasn't been a problem with DBC, but could be on larger projects/forums - always say what you are working in. Mac OSX is going to behave differently then Windows. How unfortunate would it be if you only got answers for the one you're not using?\n    </p>\n\n    <p>\n      Ask yourself if the question you're asking would make sense if you got asked it. If it doesn't you're never getting an answer.\n    </p>\"}\n  ])\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/db/seeds.rb","digestWhenLastPersisted":"da39a3ee5e6b4b0d3255bfef95601890afd80709","preferredLineEnding":null,"nextMarkerId":346,"deserializer":"TextBuffer","version":5},{"id":"91066c605b2c09176574344455217743","text":"This is the code to my personal website which has also been deployed to heroku. The actual site can be found at ben-fallon.com.\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":127},"end":{"row":0,"column":127}},"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2},"34":{"id":"34","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":35,"history":{"version":3,"nextCheckpointId":209,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,0],[30,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[30,0]],"newRange":[[0,0],[0,0]],"oldText":"> **Note**: This branch (master) contains a skeleton without any app code, perfect for creating a _new_ application or challenge. If you're looking for an example app built with this skeleton, take a look at the [example](/../..//tree/example) branch which includes basic CRUD and RSpec tests.\n\n### Purpose\nThe Sinatra Skeleton:\n\n1. Provides a foundation for building challenges or creating a new Sinatra application.\n2. Demonstrates a reasonable set of practices around building Sinatra applications.\n3. Eases the transition to Rails for Dev Bootcamp students\n\n### Quickstart\n\n1.  `bundle install`\n2.  `shotgun config.ru`\n\nAs needed, create models & migrations with the `rake` tasks:\n\n```\nrake generate:migration  # Create an empty migration in db/migrate, e.g., rake generate:migration NAME=create_tasks\nrake generate:model      # Create an empty model in app/models, e.g., rake generate:model NAME=User\n```\n\n### Contributing\n\nWe would love for you to help make the skeleton more awesome, There are three ways to contribute:\n\n1. Ask for a bug fix or enhancement!\n2. Submit a pull request for a bug fix or enhancement!\n3. Code review an open pull request!\n\nBe prepared to give and receive specific, actionable, and kind feedback!\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[0,1]],"oldText":"","newText":"T"}},{"type":"change","content":{"oldRange":[[0,1],[0,1]],"newRange":[[0,1],[0,2]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[0,2],[0,2]],"newRange":[[0,2],[0,3]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[0,3],[0,3]],"newRange":[[0,3],[0,4]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[0,4],[0,4]],"newRange":[[0,4],[0,5]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[0,4],[0,5]],"newRange":[[0,4],[0,4]],"oldText":"s","newText":""}},{"type":"change","content":{"oldRange":[[0,3],[0,4]],"newRange":[[0,3],[0,3]],"oldText":"i","newText":""}},{"type":"change","content":{"oldRange":[[0,2],[0,3]],"newRange":[[0,2],[0,2]],"oldText":"u","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,2],[0,2]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,2],[0,2]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,2],[0,2]],"newRange":[[0,2],[0,3]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[0,3],[0,3]],"newRange":[[0,3],[0,4]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[0,4],[0,4]],"newRange":[[0,4],[0,5]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,5],[0,5]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,5],[0,5]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,5],[0,5]],"newRange":[[0,5],[0,6]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[0,6],[0,6]],"newRange":[[0,6],[0,7]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[0,7],[0,7]],"newRange":[[0,7],[0,8]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,8],[0,8]],"newRange":[[0,8],[0,9]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[0,9],[0,9]],"newRange":[[0,9],[0,10]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[0,10],[0,10]],"newRange":[[0,10],[0,11]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,11],[0,11]],"newRange":[[0,11],[0,12]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,12],[0,12]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,12],[0,12]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,12],[0,12]],"newRange":[[0,12],[0,13]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[0,13],[0,13]],"newRange":[[0,13],[0,14]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[0,14],[0,14]],"newRange":[[0,14],[0,15]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[0,15],[0,15]],"newRange":[[0,15],[0,16]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,16],[0,16]],"newRange":[[0,16],[0,17]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,17],[0,17]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,17],[0,17]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,17],[0,17]],"newRange":[[0,17],[0,18]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[0,18],[0,18]],"newRange":[[0,18],[0,19]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[0,19],[0,19]],"newRange":[[0,19],[0,20]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,20],[0,20]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,20],[0,20]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,20],[0,20]],"newRange":[[0,20],[0,21]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[0,21],[0,21]],"newRange":[[0,21],[0,22]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[0,22],[0,22]],"newRange":[[0,22],[0,23]],"oldText":"","newText":"y"}},{"type":"change","content":{"oldRange":[[0,23],[0,23]],"newRange":[[0,23],[0,24]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,24],[0,24]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,24],[0,24]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,23],[0,24]],"newRange":[[0,23],[0,23]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[0,22],[0,23]],"newRange":[[0,22],[0,22]],"oldText":"y","newText":""}},{"type":"change","content":{"oldRange":[[0,22],[0,22]],"newRange":[[0,22],[0,23]],"oldText":"","newText":"y"}},{"type":"change","content":{"oldRange":[[0,23],[0,23]],"newRange":[[0,23],[0,24]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,23],[0,24]],"newRange":[[0,23],[0,23]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[0,22],[0,23]],"newRange":[[0,22],[0,22]],"oldText":"y","newText":""}},{"type":"change","content":{"oldRange":[[0,21],[0,22]],"newRange":[[0,21],[0,21]],"oldText":"u","newText":""}},{"type":"change","content":{"oldRange":[[0,21],[0,21]],"newRange":[[0,21],[0,22]],"oldText":"","newText":"y"}},{"type":"change","content":{"oldRange":[[0,22],[0,22]],"newRange":[[0,22],[0,23]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,23],[0,23]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,23],[0,23]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,23],[0,23]],"newRange":[[0,23],[0,24]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[0,24],[0,24]],"newRange":[[0,24],[0,25]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,25],[0,25]],"newRange":[[0,25],[0,26]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[0,26],[0,26]],"newRange":[[0,26],[0,27]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[0,27],[0,27]],"newRange":[[0,27],[0,28]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[0,28],[0,28]],"newRange":[[0,28],[0,29]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[0,29],[0,29]],"newRange":[[0,29],[0,30]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[0,30],[0,30]],"newRange":[[0,30],[0,31]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[0,31],[0,31]],"newRange":[[0,31],[0,32]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,32],[0,32]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,32],[0,32]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,32],[0,32]],"newRange":[[0,32],[0,33]],"oldText":"","newText":"w"}},{"type":"change","content":{"oldRange":[[0,33],[0,33]],"newRange":[[0,33],[0,34]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,34],[0,34]],"newRange":[[0,34],[0,35]],"oldText":"","newText":"b"}},{"type":"change","content":{"oldRange":[[0,35],[0,35]],"newRange":[[0,35],[0,36]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[0,36],[0,36]],"newRange":[[0,36],[0,37]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[0,37],[0,37]],"newRange":[[0,37],[0,38]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[0,38],[0,38]],"newRange":[[0,38],[0,39]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,39],[0,39]],"newRange":[[0,39],[0,40]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,40],[0,40]],"newRange":[[0,40],[0,41]],"oldText":"","newText":"w"}},{"type":"change","content":{"oldRange":[[0,41],[0,41]],"newRange":[[0,41],[0,42]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[0,42],[0,42]],"newRange":[[0,42],[0,43]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[0,43],[0,43]],"newRange":[[0,43],[0,44]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[0,44],[0,44]],"newRange":[[0,44],[0,45]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[0,45],[0,45]],"newRange":[[0,45],[0,46]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,46],[0,46]],"newRange":[[0,46],[0,47]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[0,47],[0,47]],"newRange":[[0,47],[0,48]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[0,48],[0,48]],"newRange":[[0,48],[0,49]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[0,49],[0,49]],"newRange":[[0,49],[0,50]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,50],[0,50]],"newRange":[[0,50],[0,51]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[0,51],[0,51]],"newRange":[[0,51],[0,52]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[0,52],[0,52]],"newRange":[[0,52],[0,53]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[0,53],[0,53]],"newRange":[[0,53],[0,54]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[0,54],[0,54]],"newRange":[[0,54],[0,55]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,55],[0,55]],"newRange":[[0,55],[0,56]],"oldText":"","newText":"b"}},{"type":"change","content":{"oldRange":[[0,56],[0,56]],"newRange":[[0,56],[0,57]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,57],[0,57]],"newRange":[[0,57],[0,58]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,58],[0,58]],"newRange":[[0,58],[0,59]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[0,59],[0,59]],"newRange":[[0,59],[0,60]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,60],[0,60]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,60],[0,60]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,60],[0,60]],"newRange":[[0,60],[0,61]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[0,61],[0,61]],"newRange":[[0,61],[0,62]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,62],[0,62]],"newRange":[[0,62],[0,63]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[0,63],[0,63]],"newRange":[[0,63],[0,64]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[0,64],[0,64]],"newRange":[[0,64],[0,65]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[0,65],[0,65]],"newRange":[[0,65],[0,66]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[0,66],[0,66]],"newRange":[[0,66],[0,67]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,67],[0,67]],"newRange":[[0,67],[0,68]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[0,67],[0,68]],"newRange":[[0,67],[0,67]],"oldText":"d","newText":""}},{"type":"change","content":{"oldRange":[[0,66],[0,67]],"newRange":[[0,66],[0,66]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[0,65],[0,66]],"newRange":[[0,65],[0,65]],"oldText":"t","newText":""}},{"type":"change","content":{"oldRange":[[0,65],[0,65]],"newRange":[[0,65],[0,66]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[0,66],[0,66]],"newRange":[[0,66],[0,67]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,67],[0,67]],"newRange":[[0,67],[0,68]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[0,68],[0,68]],"newRange":[[0,68],[0,69]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,68],[0,69]],"newRange":[[0,68],[0,68]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[0,67],[0,68]],"newRange":[[0,67],[0,67]],"oldText":"d","newText":""}},{"type":"change","content":{"oldRange":[[0,66],[0,67]],"newRange":[[0,66],[0,66]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[0,65],[0,66]],"newRange":[[0,65],[0,65]],"oldText":"t","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,65],[0,65]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,65],[0,65]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,65],[0,65]],"newRange":[[0,65],[0,66]],"oldText":"","newText":"y"}},{"type":"change","content":{"oldRange":[[0,66],[0,66]],"newRange":[[0,66],[0,67]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,67],[0,67]],"newRange":[[0,67],[0,68]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[0,68],[0,68]],"newRange":[[0,68],[0,69]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,69],[0,69]],"newRange":[[0,69],[0,70]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[0,70],[0,70]],"newRange":[[0,70],[0,71]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[0,71],[0,71]],"newRange":[[0,71],[0,72]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,72],[0,72]],"newRange":[[0,72],[0,73]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[0,73],[0,73]],"newRange":[[0,73],[0,74]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,74],[0,74]],"newRange":[[0,74],[0,75]],"oldText":"","newText":"r"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,75],[0,75]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,75],[0,75]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,75],[0,75]],"newRange":[[0,75],[0,76]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[0,76],[0,76]],"newRange":[[0,76],[0,77]],"oldText":"","newText":"k"}},{"type":"change","content":{"oldRange":[[0,77],[0,77]],"newRange":[[0,77],[0,78]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[0,78],[0,78]],"newRange":[[0,78],[0,79]],"oldText":"","newText":"."}},{"type":"change","content":{"oldRange":[[0,79],[0,79]],"newRange":[[0,79],[0,80]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,80],[0,80]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,80],[0,80]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,80],[0,80]],"newRange":[[0,80],[0,81]],"oldText":"","newText":"T"}},{"type":"change","content":{"oldRange":[[0,81],[0,81]],"newRange":[[0,81],[0,82]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[0,82],[0,82]],"newRange":[[0,82],[0,83]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,83],[0,83]],"newRange":[[0,83],[0,84]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,84],[0,84]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,84],[0,84]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,84],[0,84]],"newRange":[[0,84],[0,85]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[0,85],[0,85]],"newRange":[[0,85],[0,86]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[0,86],[0,86]],"newRange":[[0,86],[0,87]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[0,87],[0,87]],"newRange":[[0,87],[0,88]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[0,88],[0,88]],"newRange":[[0,88],[0,89]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[0,89],[0,89]],"newRange":[[0,89],[0,90]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[0,90],[0,90]],"newRange":[[0,90],[0,91]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[0,91],[0,91]],"newRange":[[0,91],[0,92]],"oldText":"","newText":"y"}},{"type":"change","content":{"oldRange":[[0,92],[0,92]],"newRange":[[0,92],[0,93]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,92],[0,93]],"newRange":[[0,92],[0,92]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[0,91],[0,92]],"newRange":[[0,91],[0,91]],"oldText":"y","newText":""}},{"type":"change","content":{"oldRange":[[0,91],[0,91]],"newRange":[[0,91],[0,92]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,92],[0,92]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,92],[0,92]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,92],[0,92]],"newRange":[[0,92],[0,93]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[0,93],[0,93]],"newRange":[[0,93],[0,94]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[0,94],[0,94]],"newRange":[[0,94],[0,95]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[0,95],[0,95]],"newRange":[[0,95],[0,96]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,96],[0,96]],"newRange":[[0,96],[0,97]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,97],[0,97]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,97],[0,97]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,97],[0,97]],"newRange":[[0,97],[0,98]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[0,98],[0,98]],"newRange":[[0,98],[0,99]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[0,99],[0,99]],"newRange":[[0,99],[0,100]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[0,100],[0,100]],"newRange":[[0,100],[0,101]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,101],[0,101]],"newRange":[[0,101],[0,102]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,102],[0,102]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,102],[0,102]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,101],[0,102]],"newRange":[[0,101],[0,101]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[0,100],[0,101]],"newRange":[[0,100],[0,100]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[0,100],[0,100]],"newRange":[[0,100],[0,101]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,101],[0,101]],"newRange":[[0,101],[0,102]],"oldText":"","newText":"c"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,102],[0,102]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,102],[0,102]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,101],[0,102]],"newRange":[[0,101],[0,101]],"oldText":"c","newText":""}},{"type":"change","content":{"oldRange":[[0,101],[0,101]],"newRange":[[0,101],[0,102]],"oldText":"","newText":"b"}},{"type":"change","content":{"oldRange":[[0,102],[0,102]],"newRange":[[0,102],[0,103]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,103],[0,103]],"newRange":[[0,103],[0,104]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,104],[0,104]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,90],[0,90]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,89],[0,90]],"newRange":[[0,89],[0,89]],"oldText":"l","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,89],[0,89]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,84],[0,90]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,84],[0,90]],"newRange":[[0,84],[0,90]],"oldText":"actaul","newText":"actual"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,90],[0,90]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,103],[0,103]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,103],[0,103]],"newRange":[[0,103],[0,104]],"oldText":"","newText":"f"}},{"type":"change","content":{"oldRange":[[0,104],[0,104]],"newRange":[[0,104],[0,105]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[0,105],[0,105]],"newRange":[[0,105],[0,106]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[0,106],[0,106]],"newRange":[[0,106],[0,107]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[0,107],[0,107]],"newRange":[[0,107],[0,108]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[0,108],[0,108]],"newRange":[[0,108],[0,109]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,109],[0,109]],"newRange":[[0,109],[0,110]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[0,110],[0,110]],"newRange":[[0,110],[0,111]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[0,111],[0,111]],"newRange":[[0,111],[0,112]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,112],[0,112]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,112],[0,112]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,112],[0,112]],"newRange":[[0,112],[0,113]],"oldText":"","newText":"b"}},{"type":"change","content":{"oldRange":[[0,113],[0,113]],"newRange":[[0,113],[0,114]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[0,114],[0,114]],"newRange":[[0,114],[0,115]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[0,115],[0,115]],"newRange":[[0,115],[0,116]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,115],[0,116]],"newRange":[[0,115],[0,115]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[0,115],[0,115]],"newRange":[[0,115],[0,116]],"oldText":"","newText":"0"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,116],[0,116]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,116],[0,116]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,115],[0,116]],"newRange":[[0,115],[0,115]],"oldText":"0","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,115],[0,115]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,115],[0,115]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,115],[0,115]],"newRange":[[0,115],[0,116]],"oldText":"","newText":"-"}},{"type":"change","content":{"oldRange":[[0,116],[0,116]],"newRange":[[0,116],[0,117]],"oldText":"","newText":"f"}},{"type":"change","content":{"oldRange":[[0,117],[0,117]],"newRange":[[0,117],[0,118]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[0,118],[0,118]],"newRange":[[0,118],[0,119]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[0,119],[0,119]],"newRange":[[0,119],[0,120]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[0,120],[0,120]],"newRange":[[0,120],[0,121]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[0,121],[0,121]],"newRange":[[0,121],[0,122]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[0,122],[0,122]],"newRange":[[0,122],[0,123]],"oldText":"","newText":"."}},{"type":"change","content":{"oldRange":[[0,123],[0,123]],"newRange":[[0,123],[0,124]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[0,124],[0,124]],"newRange":[[0,124],[0,125]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[0,125],[0,125]],"newRange":[[0,125],[0,126]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,125],[0,126]],"newRange":[[0,125],[0,125]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[0,125],[0,125]],"newRange":[[0,125],[0,126]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[0,126],[0,126]],"newRange":[[0,126],[0,127]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[0,126],[0,127]],"newRange":[[0,126],[0,126]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,126],[0,126]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,126],[0,126]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,126],[0,126]],"newRange":[[0,126],[0,127]],"oldText":"","newText":"."}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,127],[0,127]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,127],[0,127]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,127],[0,127]],"newRange":[[0,127],[1,0]],"oldText":"","newText":"\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,127],[0,127]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/README.md","digestWhenLastPersisted":"37c50842e21ee29213d0ab4eff49f3aa67b6f328","preferredLineEnding":null,"nextMarkerId":67,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":608,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":609,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/db/seeds.rb","bufferId":"c4b5d4d5c90eb9f43a554cfe8f53fb96","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":632,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":633,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/README.md","bufferId":"91066c605b2c09176574344455217743","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/README.md","focused":false,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-ruby","language-gfm","language-hyperlink","language-todo"],"destroyedItemURIs":["/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/app/models/dbc_posts.rb","/Users/benfallon/.Trash/20160308111020_dbc_posts.rb","/Users/benfallon/Desktop/Website/blogs/c1-chefs-kitchen.html","/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/app/views/posting.erb","/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/app/views/index.erb","/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/app/views/coding_layout.erb","/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/app/views/lighting.erb","/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/app/views/lighting/lightinghistory.erb","/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/app/controllers/index.rb","/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/app/views/layouts/lighting_layout.erb","/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/app/views/layouts/lighting_photo_layout.erb","/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/Gemfile","/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/db/migrate/20160308112840_dbc_posts.rb","/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/app/models/dbcposts.rb","/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/app/views/lighting/lightingphotos.erb","/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/app/views/layouts/coding_layout.erb","/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/app/views/blog.erb"]},"packageStates":{"pigments":{"project":{"deserializer":"ColorProject","timestamp":"2016-03-09T18:16:15.305Z","version":"1.0.1","markersVersion":"1.0.5","globalSourceNames":["**/*.styl","**/*.stylus","**/*.less","**/*.sass","**/*.scss"],"globalIgnoredNames":["vendor/*","node_modules/*","spec/*","test/*"],"buffers":{"608":{"id":608,"path":"/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/db/seeds.rb","colorMarkers":[]},"632":{"id":632,"path":"/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/README.md","colorMarkers":[]}},"paths":[],"variables":{"deserializer":"VariablesCollection","content":[]}}},"fuzzy-finder":{"/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/db/seeds.rb":1457500247597,"/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/README.md":1457537247971},"metrics":{"sessionLength":47151381},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"app":{"isExpanded":true,"entries":{"controllers":{"isExpanded":false,"entries":{}},"helpers":{"isExpanded":false,"entries":{}},"models":{"isExpanded":false,"entries":{}},"views":{"isExpanded":true,"entries":{"layouts":{"isExpanded":false,"entries":{}},"lighting":{"isExpanded":false,"entries":{}}}}}},"config":{"isExpanded":false,"entries":{}},"db":{"isExpanded":true,"entries":{"migrate":{"isExpanded":true,"entries":{}}}},"public":{"isExpanded":true,"entries":{"blogs":{"isExpanded":true,"entries":{"dbc":{"isExpanded":false,"entries":{}}}},"css":{"isExpanded":false,"entries":{}},"docs":{"isExpanded":false,"entries":{}},"font":{"isExpanded":false,"entries":{}},"imgs":{"isExpanded":false,"entries":{}},"js":{"isExpanded":false,"entries":{}},"lighting-photos":{"isExpanded":false,"entries":{}}}},"spec":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/benfallon/Desktop/Website-Ruby/sinatra-skeleton-mvc-challenge/README.md","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":40,"width":241},"find-and-replace":{"findOptions":{"findPattern":"img","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":["img"],"replaceHistory":[],"pathsHistory":[]},"keybinding-resolver":{}},"fullScreen":false}